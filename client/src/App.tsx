import React, { useState, useMemo } from "react";
import { splitIntoSentencesAdvanced } from "./utils/latvianSegmentation";

// ============================================================================
// REACT –ö–û–ú–ü–û–ù–ï–ù–¢
// ============================================================================

const LatvianSentenceTester = () => {
  const [inputText, setInputText] = useState(`ZI≈ÖAS
≈†odien ir 5. augustƒÅ. Anna pamostas agri. Vi≈Üas mammai ≈°odien ir dzim≈°anas diena.

Anna grib mammu pƒÅrsteigt ar dzim≈°anas dienas brokastƒ´m. Mammai ƒºoti gar≈°o pank≈´kas ar iebie≈æinƒÅto pienu. TƒÅpƒìc Anna nolemj uzcept gardas pank≈´kas.

Anna klusi dodas uz virtuvi. Vi≈Üa negrib pamodinƒÅt mammu. Anna sƒÅk darbu pie pank≈´ku cep≈°anas. Vispirms vi≈Üa apsien sev priek≈°autu.

Mans plƒÅns:
1. Pamosties agri.
2. Padarƒ´t mƒÅjas darbus.
3. Iet gulƒìt.

Dr. Bƒìrzi≈Ü≈° strƒÅdƒÅ u.c. darbus. Piem., vi≈Ü≈° raksta grƒÅmatas. Vi≈Ü≈° dzƒ´vo 3. stƒÅvƒÅ.`);

  // –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–¥–µ–ª–µ–Ω–∏—è –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π
  const colors = [
    "#FFE5E5", // —Å–≤–µ—Ç–ª–æ-–∫—Ä–∞—Å–Ω—ã–π
    "#E5F3FF", // —Å–≤–µ—Ç–ª–æ-—Å–∏–Ω–∏–π
    "#E5FFE5", // —Å–≤–µ—Ç–ª–æ-–∑–µ–ª–µ–Ω—ã–π
    "#FFF0E5", // —Å–≤–µ—Ç–ª–æ-–æ—Ä–∞–Ω–∂–µ–≤—ã–π
    "#F0E5FF", // —Å–≤–µ—Ç–ª–æ-—Ñ–∏–æ–ª–µ—Ç–æ–≤—ã–π
    "#FFFFE5", // —Å–≤–µ—Ç–ª–æ-–∂–µ–ª—Ç—ã–π
    "#E5FFFF", // —Å–≤–µ—Ç–ª–æ-–≥–æ–ª—É–±–æ–π
    "#FFE5F0", // —Å–≤–µ—Ç–ª–æ-—Ä–æ–∑–æ–≤—ã–π
    "#F0FFE5", // —Å–≤–µ—Ç–ª–æ-–ª–∞–π–º
    "#FFE5FF", // —Å–≤–µ—Ç–ª–æ-–ø—É—Ä–ø—É—Ä–Ω—ã–π
  ];

  // –í—ã—á–∏—Å–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å–µ–≥–º–µ–Ω—Ç–∞—Ü–∏–∏
  const segmentationResult = useMemo(() => {
    if (!inputText.trim()) return { sentences: [], visualizedText: "" };

    const sentences = splitIntoSentencesAdvanced(inputText);

    // –°–æ–∑–¥–∞–µ–º –≤–∏–∑—É–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç
    let visualizedText = inputText;
    let offset = 0;

    sentences.forEach((sentence, index) => {
      const color = colors[index % colors.length];
      const sentenceIndex = visualizedText.indexOf(sentence, offset);

      if (sentenceIndex !== -1) {
        const before = visualizedText.substring(0, sentenceIndex);
        const highlighted = `<span style="background-color: ${color}; padding: 2px 4px; border-radius: 3px; margin: 1px;">${sentence}</span>`;
        const after = visualizedText.substring(sentenceIndex + sentence.length);

        visualizedText = before + highlighted + after;
        offset = sentenceIndex + highlighted.length;
      }
    });

    return { sentences, visualizedText };
  }, [inputText]);

  // –ü—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã
  const testCases = [
    {
      name: "üéØ –û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ—Å—Ç",
      text: `ZI≈ÖAS
≈†odien ir 5. augustƒÅ. Anna pamostas agri. Vi≈Üas mammai ≈°odien ir dzim≈°anas diena.`,
    },
    {
      name: "üìÖ –î–∞—Ç—ã",
      text: "Tik≈°anƒÅs notiks 15. janvƒÅrƒ´. Anna b≈´s tur. Mƒìs sƒÅksim 10. februƒÅrƒ´.",
    },
    {
      name: "üìù –°–æ–∫—Ä–∞—â–µ–Ω–∏—è",
      text: "Dr. Bƒìrzi≈Ü≈° strƒÅdƒÅ u.c. darbus. Piem., vi≈Ü≈° raksta grƒÅmatas.",
    },
    {
      name: "üè¢ –ê–¥—Ä–µ—Å–∞",
      text: "Es dzƒ´voju 3. stƒÅvƒÅ. Mans draugs dzƒ´vo Brƒ´vƒ´bas ielƒÅ 25. mƒÅja.",
    },
    {
      name: "üî¢ –°–ø–∏—Å–∫–∏",
      text: `Mans plƒÅns:
1. Pamosties agri.
2. Padarƒ´t mƒÅjas darbus.
3. Iet gulƒìt.`,
    },
    {
      name: "üì∞ –ó–∞–≥–æ–ª–æ–≤–∫–∏",
      text: `SVARƒ™GI PAZI≈ÖOJUMI
≈†odien notiks svarƒ´gs pasƒÅkums.

Manas vasaras atmi≈Üas
Es atceros tos brƒ´ni≈°ƒ∑ƒ´gos mirkƒºus.`,
    },
  ];

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 p-6">
      <div className="max-w-7xl mx-auto">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div className="text-center mb-8">
          <h1 className="text-4xl font-bold text-gray-800 mb-2">
            üá±üáª –¢–µ—Å—Ç–µ—Ä —É–º–Ω–æ–π —Å–µ–≥–º–µ–Ω—Ç–∞—Ü–∏–∏ –ª–∞—Ç—ã—à—Å–∫–∏—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π
          </h1>
          <p className="text-gray-600 text-lg">
            –í—Å—Ç–∞–≤—å—Ç–µ –ª–∞—Ç—ã—à—Å–∫–∏–π —Ç–µ–∫—Å—Ç –∏ –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ, –∫–∞–∫ –∞–ª–≥–æ—Ä–∏—Ç–º —Ä–∞–∑–±–∏–≤–∞–µ—Ç –µ–≥–æ –Ω–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
          </p>
        </div>

        {/* –ë—ã—Å—Ç—Ä—ã–µ —Ç–µ—Å—Ç—ã */}
        <div className="mb-6">
          <h3 className="text-lg font-semibold mb-3 text-gray-700">üß™ –ì–æ—Ç–æ–≤—ã–µ —Ç–µ—Å—Ç—ã:</h3>
          <div className="flex flex-wrap gap-2">
            {testCases.map((testCase, index) => (
              <button
                key={index}
                onClick={() => setInputText(testCase.text)}
                className="px-4 py-2 bg-white rounded-lg shadow-sm hover:shadow-md transition-shadow border border-gray-200 text-sm font-medium text-gray-700 hover:bg-gray-50"
              >
                {testCase.name}
              </button>
            ))}
          </div>
        </div>

        {/* –û—Å–Ω–æ–≤–Ω–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å */}
        <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
          {/* –õ–µ–≤–∞—è –ø–∞–Ω–µ–ª—å - –≤–≤–æ–¥ */}
          <div className="bg-white rounded-xl shadow-lg p-6">
            <h2 className="text-xl font-semibold mb-4 text-gray-800 flex items-center">
              üìù –ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç
            </h2>

            <textarea
              value={inputText}
              onChange={e => setInputText(e.target.value)}
              placeholder="–í—Å—Ç–∞–≤—å—Ç–µ –ª–∞—Ç—ã—à—Å–∫–∏–π —Ç–µ–∫—Å—Ç –∑–¥–µ—Å—å..."
              className="w-full h-96 p-4 border border-gray-300 rounded-lg font-mono text-sm leading-relaxed resize-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
            />

            <div className="mt-4 text-sm text-gray-500">
              –°–∏–º–≤–æ–ª–æ–≤: {inputText.length} | –°—Ç—Ä–æ–∫: {inputText.split("\n").length}
            </div>
          </div>

          {/* –ü—Ä–∞–≤–∞—è –ø–∞–Ω–µ–ª—å - —Ä–µ–∑—É–ª—å—Ç–∞—Ç */}
          <div className="bg-white rounded-xl shadow-lg p-6">
            <h2 className="text-xl font-semibold mb-4 text-gray-800 flex items-center">
              üé® –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–µ–≥–º–µ–Ω—Ç–∞—Ü–∏–∏
              <span className="ml-2 px-2 py-1 bg-blue-100 text-blue-800 text-sm rounded-full">
                {segmentationResult.sentences.length} –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π
              </span>
            </h2>

            <div
              className="w-full h-96 p-4 border border-gray-300 rounded-lg font-mono text-sm leading-relaxed overflow-y-auto bg-gray-50"
              dangerouslySetInnerHTML={{ __html: segmentationResult.visualizedText }}
            />

            <div className="mt-4 text-sm text-gray-500">
              üí° –ö–∞–∂–¥–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –≤—ã–¥–µ–ª–µ–Ω–æ —Å–≤–æ–∏–º —Ü–≤–µ—Ç–æ–º
            </div>
          </div>
        </div>

        {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
        <div className="mt-6 bg-white rounded-xl shadow-lg p-6">
          <h3 className="text-lg font-semibold mb-4 text-gray-800">üìä –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h3>

          <div className="grid grid-cols-1 md:grid-cols-3 gap-4 mb-4">
            <div className="bg-blue-50 p-4 rounded-lg">
              <div className="text-2xl font-bold text-blue-600">
                {segmentationResult.sentences.length}
              </div>
              <div className="text-sm text-blue-800">–í—Å–µ–≥–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π</div>
            </div>

            <div className="bg-green-50 p-4 rounded-lg">
              <div className="text-2xl font-bold text-green-600">
                {segmentationResult.sentences.filter(s => isTitle(s)).length}
              </div>
              <div className="text-sm text-green-800">–ó–∞–≥–æ–ª–æ–≤–∫–æ–≤</div>
            </div>

            <div className="bg-purple-50 p-4 rounded-lg">
              <div className="text-2xl font-bold text-purple-600">
                {Math.round(
                  segmentationResult.sentences.reduce((sum, s) => sum + s.length, 0) /
                    Math.max(segmentationResult.sentences.length, 1)
                )}
              </div>
              <div className="text-sm text-purple-800">–°—Ä–µ–¥–Ω—è—è –¥–ª–∏–Ω–∞</div>
            </div>
          </div>

          {/* –°–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π */}
          <div className="space-y-2">
            <h4 className="font-medium text-gray-700">–ù–∞–π–¥–µ–Ω–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è:</h4>
            <div className="max-h-48 overflow-y-auto">
              {segmentationResult.sentences.map((sentence, index) => (
                <div key={index} className="flex items-start gap-3 p-2 hover:bg-gray-50 rounded">
                  <span
                    className="flex-shrink-0 w-6 h-6 rounded-full flex items-center justify-center text-xs font-medium text-white"
                    style={{ backgroundColor: colors[index % colors.length].replace("E5", "80") }}
                  >
                    {index + 1}
                  </span>
                  <div className="flex-1">
                    <span className="text-sm text-gray-600">
                      {isTitle(sentence) ? "üì∞ " : "üìù "}
                      {sentence}
                    </span>
                  </div>
                </div>
              ))}
            </div>
          </div>
        </div>

        {/* –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è */}
        <div className="mt-6 bg-gradient-to-r from-blue-50 to-indigo-50 rounded-xl p-6 border border-blue-200">
          <h3 className="text-lg font-semibold mb-3 text-blue-800">‚ÑπÔ∏è –ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è</h3>
          <div className="grid grid-cols-1 md:grid-cols-2 gap-4 text-sm text-blue-700">
            <div>
              <p className="mb-2">
                <strong>1. –í—Å—Ç–∞–≤—å—Ç–µ –ª–∞—Ç—ã—à—Å–∫–∏–π —Ç–µ–∫—Å—Ç</strong> –≤ –ª–µ–≤–æ–µ –æ–∫–Ω–æ
              </p>
              <p className="mb-2">
                <strong>2. –ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç</strong> –≤ –ø—Ä–∞–≤–æ–º –æ–∫–Ω–µ
              </p>
              <p>
                <strong>3. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≥–æ—Ç–æ–≤—ã–µ —Ç–µ—Å—Ç—ã</strong> –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–∑–Ω—ã—Ö —Å–ª—É—á–∞–µ–≤
              </p>
            </div>
            <div>
              <p className="mb-2">
                ‚úÖ <strong>–†–∞—Å–ø–æ–∑–Ω–∞–µ—Ç:</strong> –¥–∞—Ç—ã, —Å–æ–∫—Ä–∞—â–µ–Ω–∏—è, —Å–ø–∏—Å–∫–∏, –∑–∞–≥–æ–ª–æ–≤–∫–∏
              </p>
              <p className="mb-2">
                üé® <strong>–¶–≤–µ—Ç–∞:</strong> –∫–∞–∂–¥–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∏–º–µ–µ—Ç —Å–≤–æ–π —Ü–≤–µ—Ç
              </p>
              <p>
                üìä <strong>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</strong> –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏ —Ç–∏–ø—ã –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π
              </p>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default LatvianSentenceTester;
